{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport uuid from 'react-native-uuid';\nimport * as SQLite from 'expo-sqlite';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar db = SQLite.openDatabase('VisionTalesDB.db');\nvar Quiz = function Quiz(props) {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedId = _useState2[0],\n    setSelectedId = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    demoData = _useState4[0],\n    setDemoData = _useState4[1];\n  useEffect(function () {\n    db.transaction(function (tx) {\n      tx.executeSql(\"SELECT * FROM table_demographics\", [], function (tx, results) {\n        console.log(\"Results: \", results.rows);\n        var temp = [];\n        temp.push(results.rows.item(0));\n        setDemoData(temp);\n      });\n    });\n  }, []);\n  return _jsxs(SafeAreaView, {\n    children: [_jsx(Text, {\n      style: {\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        fontSize: 20\n      },\n      children: props.questions[props.qNum]\n    }), props.choices[props.qNum] && props.choices[props.qNum].map(function (item, key) {\n      return _jsx(Pressable, {\n        onPress: function onPress() {\n          props.customClick();\n          if (props.correct[props.qNum][key]) {\n            alert(\"ðŸ¤—ðŸ˜ŠðŸŽˆ Correct! ðŸ˜€ðŸ¥³ðŸ˜‡\");\n          } else {\n            alert(\"ðŸ‘ŽðŸ˜²ðŸ’© Incorrect! ðŸ¤¨ðŸ˜‘ðŸ˜­\");\n          }\n        },\n        style: [styles.button],\n        children: _jsx(Text, {\n          style: {\n            color: \"#dbb42b\",\n            fontSize: 20\n          },\n          children: item\n        }, key)\n      });\n    }), props.qNum >= props.questions.length && _jsx(Text, {\n      style: {\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: 10,\n        fontSize: 20\n      },\n      children: \" Quiz done! \\uD83E\\uDD73\\u2705 Please return to previous page \\uD83D\\uDD19 \"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  button: {\n    alignItems: 'center',\n    backgroundColor: '#0e363c',\n    color: '#ffffff',\n    padding: 20,\n    borderRadius: 10,\n    marginTop: 16,\n    marginLeft: 35,\n    marginRight: 35\n  },\n  text: {\n    color: '#dbb42b',\n    fontSize: 20\n  },\n  baseText: {\n    fontWeight: 'bold'\n  },\n  container: {\n    color: 'white'\n  }\n});\nexport default Quiz;","map":{"version":3,"names":["React","useState","useEffect","uuid","SQLite","db","openDatabase","Quiz","props","selectedId","setSelectedId","demoData","setDemoData","transaction","tx","executeSql","results","console","log","rows","temp","push","item","marginLeft","marginRight","fontSize","questions","qNum","choices","map","key","customClick","correct","alert","styles","button","color","length","marginTop","StyleSheet","create","alignItems","backgroundColor","padding","borderRadius","text","baseText","fontWeight","container"],"sources":["/Users/shravun/Desktop/Dev/visiontales-app/iSight-MobileApp-main-2/VisionTalesAdmin/pages/components/QuizQuestion.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { SafeAreaView, View, FlatList, Text, StatusBar, Pressable, StyleSheet, } from 'react-native';\nimport uuid from 'react-native-uuid';\nimport * as SQLite from 'expo-sqlite';\n\nvar db = SQLite.openDatabase('VisionTalesDB.db');\n\nconst Quiz = (props) => {\n\n  const [selectedId, setSelectedId] = useState(null);\n  const [demoData, setDemoData] = useState([]);\n\n  // Query for demographic data\n  useEffect(() => {\n    db.transaction((tx) => {\n      tx.executeSql(\n        \"SELECT * FROM table_demographics\",\n        [],\n        (tx, results) => {\n          console.log(\"Results: \", results.rows);\n          var temp = [];\n          temp.push(results.rows.item(0));\n          setDemoData(temp);\n        },\n      );\n    });\n  }, []);\n\n\n  return (\n    <SafeAreaView>\n      <Text style={{ marginLeft: 'auto', marginRight: 'auto', fontSize: 20 }}>{props.questions[props.qNum]}</Text>\n      {props.choices[props.qNum] &&\n        props.choices[props.qNum].map((item, key) => (\n          <Pressable onPress={() => {\n            // Increment our question counter\n            props.customClick()\n\n            // Send the response to AWS\n\t    // Removed for admin version to not tamper with results data\n\t    /*\n            fetch('https://2jwoowlka2.execute-api.us-east-1.amazonaws.com/responses', {\n              method: 'PUT',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                response_id: uuid.v4(),\n                quiz_id: props.video_id,\n                question_text: props.questions[props.qNum],\n                Location: demoData[0].location,\n                choices_chosen: key,\n                gender: demoData[0].gender,\n                age: demoData[0].age\n              })\n            })\n              .then(response => response.json())\n              .then((data) => {\n                // Alert.alert(\n                //   'Success',\n                //   'You Have Uploaded Successfully!',\n                //     [\n                //       {\n                //         text: 'Ok',\n                //         onPress: () => navigation.navigate('HomeScreen'),\n                //       },\n                //     ],\n                //     { cancelable: false }\n                // );\n              })\n              .catch((error) => {\n                console.log(error);\n                Alert.alert('Response Failed To Upload');\n              });\t*/\n\n            if (props.correct[props.qNum][key]) {\n              alert(\"ðŸ¤—ðŸ˜ŠðŸŽˆ Correct! ðŸ˜€ðŸ¥³ðŸ˜‡\")\n            } else {\n              alert(\"ðŸ‘ŽðŸ˜²ðŸ’© Incorrect! ðŸ¤¨ðŸ˜‘ðŸ˜­\")\n            }\n          }\n         } style={[styles.button]}>\n            <Text key={key} style={{ color: \"#dbb42b\", fontSize: 20 }} >{item}</Text>\n          </Pressable>\n        ))\n      }\n      {(props.qNum >= props.questions.length) &&\n        <Text style={{ marginLeft: 'auto', marginRight: 'auto', marginTop: 10, fontSize: 20 }}> Quiz done! ðŸ¥³âœ… Please return to previous page ðŸ”™ </Text>\n      }\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    alignItems: 'center',\n    backgroundColor: '#0e363c',\n    color: '#ffffff',\n    padding: 20,\n    borderRadius: 10,\n    marginTop: 16,\n    marginLeft: 35,\n    marginRight: 35,\n  },\n  text: {\n    color: '#dbb42b',\n    fontSize: 20\n  },\n  baseText: {\n    fontWeight: 'bold'\n  },\n  container: {\n    color: 'white'\n  }\n});\n\nexport default Quiz;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}