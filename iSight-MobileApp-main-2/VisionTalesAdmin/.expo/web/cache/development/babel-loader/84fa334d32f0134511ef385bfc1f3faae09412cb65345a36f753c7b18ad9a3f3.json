{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport MainText from \"./components/MainText\";\nimport * as SQLite from 'expo-sqlite';\nimport YoutubePlayer from 'react-native-youtube-iframe';\nimport NavButton from \"./components/NavButton\";\nimport ViewQuiz from \"./ViewQuiz\";\nimport Quiz from \"./components/QuizQuestion\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar db = SQLite.openDatabase(\"VisionTalesDB.db\");\nvar ViewVideos = function ViewVideos(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var topic = route.params.topic;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    flatListItems = _useState2[0],\n    setFlatListItems = _useState2[1];\n  var questions = [];\n  var choices = [];\n  var correct = [];\n  function getQuiz(yt_id) {\n    var response, json, videoQuiz;\n    return _regeneratorRuntime.async(function getQuiz$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://2jwoowlka2.execute-api.us-east-1.amazonaws.com/videos/\" + yt_id));\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n          case 6:\n            json = _context.sent;\n            videoQuiz = json.Item;\n            questions = videoQuiz.quiz.questions;\n            choices = videoQuiz.quiz.choices;\n            correct = videoQuiz.quiz.correct;\n            console.log(\"made call in View Video Quiz: \", questions.length);\n            _context.next = 17;\n            break;\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 14]], Promise);\n  }\n  function takeQuiz(e, yt_id) {\n    return _regeneratorRuntime.async(function takeQuiz$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(e === \"ended\")) {\n              _context2.next = 4;\n              break;\n            }\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(getQuiz(yt_id));\n          case 3:\n            if (questions.length > 0) {\n              Alert.alert(\"Quiz time! Please take the quiz.\");\n              navigation.navigate(\"ViewQuiz\", {\n                id: yt_id,\n                questions: questions,\n                choices: choices,\n                correct: correct\n              });\n            }\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n  useEffect(function () {\n    db.transaction(function (tx) {\n      tx.executeSql(\"SELECT * FROM table_video WHERE topic=?\", [topic], function (tx, results) {\n        console.log(\"Results: \", results.rows);\n        var temp = [];\n        for (var i = 0; i < results.rows.length; ++i) {\n          temp.push(results.rows.item(i));\n        }\n        console.log(temp);\n        setFlatListItems(temp);\n      }, function (tx, errors) {\n        console.log(errors);\n      });\n    });\n  }, []);\n  var listViewItemSeparator = function listViewItemSeparator() {\n    return _jsx(View, {\n      style: {\n        height: 0.2,\n        width: \"100%\",\n        backgroundColor: \"#808080\"\n      }\n    });\n  };\n  var listItemView = function listItemView(item) {\n    console.log(item.video_id);\n    return _jsxs(View, {\n      style: {\n        backgroundColor: \"#dbb42b\",\n        padding: 20\n      },\n      children: [_jsx(MainText, {\n        text: item.title\n      }), _jsx(YoutubePlayer, {\n        height: 300,\n        play: false,\n        videoId: item.yt_id,\n        onChangeState: function onChangeState(e) {\n          return takeQuiz(e, item.yt_id);\n        }\n      }), _jsx(NavButton, {\n        title: \"Edit Video\",\n        customClick: function customClick() {\n          return navigation.navigate(\"EditVideo\", {\n            video_id: item.video_id,\n            title: item.title,\n            topic: item.topic,\n            yt_id: item.yt_id,\n            url: item.url\n          });\n        }\n      }), _jsx(NavButton, {\n        title: \"Delete Video\",\n        customClick: function customClick() {\n          return navigation.navigate(\"DeleteVideo\", {\n            video_id: item.video_id,\n            yt_id: item.yt_id\n          });\n        }\n      }), _jsx(NavButton, {\n        title: \"Edit Video Quiz\",\n        customClick: function _callee() {\n          return _regeneratorRuntime.async(function _callee$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return _regeneratorRuntime.awrap(getQuiz(item.yt_id));\n                case 2:\n                  console.log(\"yt_id ViewV: \" + item.yt_id);\n                  navigation.navigate(\"EditVideoQuiz\", {\n                    video_id: item.yt_id,\n                    questions: questions,\n                    choices: choices,\n                    correct: correct,\n                    title: item.title,\n                    topic: item.topic\n                  });\n                case 4:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        }\n      }), _jsx(NavButton, {\n        title: \"Take Quiz\",\n        customClick: function _callee2() {\n          return _regeneratorRuntime.async(function _callee2$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return _regeneratorRuntime.awrap(getQuiz(item.yt_id));\n                case 2:\n                  navigation.navigate(\"ViewQuiz\", {\n                    id: item.yt_id,\n                    questions: questions,\n                    choices: choices,\n                    correct: correct\n                  });\n                case 3:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        }\n      })]\n    }, item.video_id);\n  };\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(View, {\n      style: {\n        flex: 1,\n        backgroundColor: \"#dbb42b\"\n      },\n      children: _jsx(FlatList, {\n        data: flatListItems,\n        ItemSeparatorComponent: listViewItemSeparator,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return listItemView(item);\n        }\n      })\n    })\n  });\n};\nexport default ViewVideos;","map":{"version":3,"names":["React","useState","useEffect","useCallback","MainText","SQLite","YoutubePlayer","NavButton","ViewQuiz","Quiz","db","openDatabase","ViewVideos","route","navigation","topic","params","flatListItems","setFlatListItems","questions","choices","correct","getQuiz","yt_id","fetch","response","json","videoQuiz","Item","quiz","console","log","length","takeQuiz","e","Alert","alert","navigate","id","transaction","tx","executeSql","results","rows","temp","i","push","item","errors","listViewItemSeparator","height","width","backgroundColor","listItemView","video_id","padding","title","url","flex","index","toString"],"sources":["/Users/shravun/Desktop/Dev/visiontales-app/iSight-MobileApp-main-2/VisionTalesAdmin/pages/ViewVideos.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { FlatList, Text, View, SafeAreaView, Alert } from 'react-native';\nimport MainText from './components/MainText';\nimport * as SQLite from 'expo-sqlite';\nimport YoutubePlayer from 'react-native-youtube-iframe';\nimport NavButton from './components/NavButton';\nimport ViewQuiz from './ViewQuiz';\nimport Quiz from './components/QuizQuestion';\n\nvar db = SQLite.openDatabase(\"VisionTalesDB.db\");\n\nconst ViewVideos = ({ route, navigation }) => {\n  \n  const topic = route.params.topic;\n  // const yt_id = route.params.yt_id;\n  // const title = route.params.title;\n  let [flatListItems, setFlatListItems] = useState([]);\n  let questions = [];\n  let choices = [];\n  let correct = [];\n\n  async function getQuiz(yt_id) {\n    try {\n      const response = await fetch(\n        `https://2jwoowlka2.execute-api.us-east-1.amazonaws.com/videos/${yt_id}`\n      );\n      const json = await response.json();\n      const videoQuiz = json.Item;\n\n      questions = videoQuiz.quiz.questions;\n      choices = videoQuiz.quiz.choices;\n      correct = videoQuiz.quiz.correct;\n\n      console.log(\"made call in View Video Quiz: \", questions.length);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function takeQuiz(e, yt_id) {\n    if (e === \"ended\") {\n      await getQuiz(yt_id);\n      if (questions.length > 0) {\n\tAlert.alert(\"Quiz time! Please take the quiz.\");\n        navigation.navigate(\"ViewQuiz\", {\n          id: yt_id,\n          questions: questions,\n          choices: choices,\n          correct: correct,\n        });\n      }\n    }\n  }\n\n  useEffect(() => {\n    db.transaction((tx) => {\n      tx.executeSql(\n        \"SELECT * FROM table_video WHERE topic=?\",\n        [topic],\n        (tx, results) => {\n          console.log(\"Results: \", results.rows);\n          var temp = [];\n          for (let i = 0; i < results.rows.length; ++i)\n            temp.push(results.rows.item(i));\n          console.log(temp);\n          setFlatListItems(temp);\n        },\n        (tx, errors) => {\n          console.log(errors);\n        }\n      );\n    });\n  }, []);\n\n  let listViewItemSeparator = () => {\n    return (\n      <View\n        style={{\n          height: 0.2,\n          width: \"100%\",\n          backgroundColor: \"#808080\",\n        }}\n      />\n    );\n  };\n\n  let listItemView = (item) => {\n    console.log(item.video_id);\n    return (\n      <View\n        key={item.video_id}\n        style={{ backgroundColor: \"#dbb42b\", padding: 20 }}\n      >\n\t<MainText text={item.title} />\n        <YoutubePlayer \n\t  height={300} \n\t  play={false} \n\t  videoId={item.yt_id}\n\t  onChangeState={e => takeQuiz(e, item.yt_id)}\n\t/>\n        <NavButton\n          title=\"Edit Video\"\n          customClick={() =>\n            navigation.navigate(\"EditVideo\", {\n              video_id: item.video_id,\n              title: item.title,\n              topic: item.topic,\n              yt_id: item.yt_id,\n              url: item.url,\n            })\n          }\n        />\n        <NavButton\n          title=\"Delete Video\"\n          customClick={() =>\n            navigation.navigate(\"DeleteVideo\", {\n              video_id: item.video_id,\n              yt_id: item.yt_id,\n            })\n          }\n        />\n\n        <NavButton\n          title=\"Edit Video Quiz\"\n          customClick={async () => {\n            await getQuiz(item.yt_id);\n            console.log(\"yt_id ViewV: \" + item.yt_id);\n            navigation.navigate(\"EditVideoQuiz\", {\n              video_id: item.yt_id,\n              questions: questions,\n              choices: choices,\n              correct: correct,\n              title: item.title,\n              topic: item.topic,\n            });\n          }}\n        />\n\n        <NavButton\n          title=\"Take Quiz\"\n          customClick={async () => {\n            await getQuiz(item.yt_id);\n            navigation.navigate(\"ViewQuiz\", {\n              id: item.yt_id,\n              questions: questions,\n              choices: choices,\n              correct: correct,\n            });\n          }}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <View style={{ flex: 1, backgroundColor: \"#dbb42b\" }}>\n        <FlatList\n          data={flatListItems}\n          ItemSeparatorComponent={listViewItemSeparator}\n          keyExtractor={(item, index) => index.toString()}\n          renderItem={({ item }) => listItemView(item)}\n        />\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default ViewVideos;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}