{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Quiz from \"./components/QuizQuestion\";\nimport NavButton from \"./components/NavButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ViewQuiz = function ViewQuiz(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var id = route.params.id;\n  var _useState = useState(route.params.questions),\n    _useState2 = _slicedToArray(_useState, 2),\n    questions = _useState2[0],\n    setQuestions = _useState2[1];\n  var _useState3 = useState(route.params.choices),\n    _useState4 = _slicedToArray(_useState3, 2),\n    choices = _useState4[0],\n    setChoices = _useState4[1];\n  var _useState5 = useState(route.params.correct),\n    _useState6 = _slicedToArray(_useState5, 2),\n    correct = _useState6[0],\n    setCorrect = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    qNum = _useState8[0],\n    setqNum = _useState8[1];\n  var listViewItemSeparator = function listViewItemSeparator() {\n    return _jsx(View, {\n      style: {\n        height: 0.2,\n        width: '100%',\n        backgroundColor: '#808080'\n      }\n    });\n  };\n  var listItemView = function listItemView(item) {\n    return _jsxs(View, {\n      style: {\n        backgroundColor: 'white',\n        padding: 30\n      },\n      children: [_jsx(Text, {\n        children: item.choice_content\n      }), _jsx(NavButton, {\n        customClick: function _callee() {\n          return _regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return _regeneratorRuntime.awrap(getQuizQuestion(item.yt_id));\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        }\n      })]\n    }, item.choice_content);\n  };\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(View, {\n      style: {\n        flex: 1,\n        backgroundColor: '#dbb42b'\n      },\n      children: choices && correct && questions && _jsx(Quiz, {\n        qNum: qNum,\n        customClick: function customClick() {\n          return setqNum(qNum + 1);\n        },\n        questions: questions,\n        choices: choices,\n        correct: correct,\n        video_id: id,\n        send: true\n      })\n    })\n  });\n};\nexport default ViewQuiz;","map":{"version":3,"names":["React","useState","useEffect","Quiz","NavButton","ViewQuiz","navigation","route","id","params","questions","setQuestions","choices","setChoices","correct","setCorrect","qNum","setqNum","listViewItemSeparator","height","width","backgroundColor","listItemView","item","padding","choice_content","getQuizQuestion","yt_id","flex"],"sources":["/Users/shravun/Desktop/Dev/visiontales-app/iSight-MobileApp-main-2/VisionTalesAdmin/pages/ViewQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FlatList, Text, View, SafeAreaView, TextInput } from 'react-native';\nimport Quiz from './components/QuizQuestion';\nimport NavButton from './components/NavButton';\n\nconst ViewQuiz = ({ navigation, route }) => {\n\n    const id = route.params.id;\n\n    const [questions, setQuestions] = useState(route.params.questions);\n    const [choices, setChoices] = useState(route.params.choices);\n    const [correct, setCorrect] = useState(route.params.correct);\n\n    const [qNum, setqNum] = useState(0);\n\n    /* Not used rn, only used if FlatList is rendered */\n    let listViewItemSeparator = () => {\n        return (\n            <View\n                style={{\n                    height: 0.2,\n                    width: '100%',\n                    backgroundColor: '#808080'\n                }}\n            />\n        );\n    };\n\n    /* Not used rn, only used if FlatList is rendered */\n    let listItemView = (item) => {\n        return (\n            <View\n                key={item.choice_content}\n                style={{ backgroundColor: 'white', padding: 30 }}>\n                <Text>\n                    {item.choice_content}\n                </Text>\n                <NavButton\n                    customClick={async () => {\n                        await getQuizQuestion(item.yt_id);\n                    }}\n                />\n            </View>\n        );\n    };\n\n    return (\n        <SafeAreaView style={{ flex: 1 }}>\n            <View style={{ flex: 1, backgroundColor: '#dbb42b'}}>\n            {choices && correct && questions && (\n                <Quiz\n                    qNum={qNum}\n                    customClick={() => setqNum(qNum + 1)}\n                    questions={questions}\n                    choices={choices}\n                    correct={correct}\n                    video_id={id}\n                    send={true}\n                />\n                \n            )}\n            </View>\n        </SafeAreaView>\n    );\n};\n\nexport default ViewQuiz;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAEnD,OAAOC,IAAI;AACX,OAAOC,SAAS;AAA+B;AAAA;AAE/C,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,OAA8B;EAAA,IAAxBC,UAAU,QAAVA,UAAU;IAAEC,KAAK,QAALA,KAAK;EAEjC,IAAMC,EAAE,GAAGD,KAAK,CAACE,MAAM,CAACD,EAAE;EAE1B,gBAAkCP,QAAQ,CAACM,KAAK,CAACE,MAAM,CAACC,SAAS,CAAC;IAAA;IAA3DA,SAAS;IAAEC,YAAY;EAC9B,iBAA8BV,QAAQ,CAACM,KAAK,CAACE,MAAM,CAACG,OAAO,CAAC;IAAA;IAArDA,OAAO;IAAEC,UAAU;EAC1B,iBAA8BZ,QAAQ,CAACM,KAAK,CAACE,MAAM,CAACK,OAAO,CAAC;IAAA;IAArDA,OAAO;IAAEC,UAAU;EAE1B,iBAAwBd,QAAQ,CAAC,CAAC,CAAC;IAAA;IAA5Be,IAAI;IAAEC,OAAO;EAGpB,IAAIC,qBAAqB,GAAG,SAAxBA,qBAAqB,GAAS;IAC9B,OACI,KAAC,IAAI;MACD,KAAK,EAAE;QACHC,MAAM,EAAE,GAAG;QACXC,KAAK,EAAE,MAAM;QACbC,eAAe,EAAE;MACrB;IAAE,EACJ;EAEV,CAAC;EAGD,IAAIC,YAAY,GAAG,SAAfA,YAAY,CAAIC,IAAI,EAAK;IACzB,OACI,MAAC,IAAI;MAED,KAAK,EAAE;QAAEF,eAAe,EAAE,OAAO;QAAEG,OAAO,EAAE;MAAG,CAAE;MAAA,WACjD,KAAC,IAAI;QAAA,UACAD,IAAI,CAACE;MAAc,EACjB,EACP,KAAC,SAAS;QACN,WAAW,EAAE;UAAA;YAAA;cAAA;gBAAA;kBAAA;kBAAA,iCACHC,eAAe,CAACH,IAAI,CAACI,KAAK,CAAC;gBAAA;gBAAA;kBAAA;cAAA;YAAA;UAAA;QAAA;MACnC,EACJ;IAAA,GATGJ,IAAI,CAACE,cAAc,CAUrB;EAEf,CAAC;EAED,OACI,KAAC,YAAY;IAAC,KAAK,EAAE;MAAEG,IAAI,EAAE;IAAE,CAAE;IAAA,UAC7B,KAAC,IAAI;MAAC,KAAK,EAAE;QAAEA,IAAI,EAAE,CAAC;QAAEP,eAAe,EAAE;MAAS,CAAE;MAAA,UACnDT,OAAO,IAAIE,OAAO,IAAIJ,SAAS,IAC5B,KAAC,IAAI;QACD,IAAI,EAAEM,IAAK;QACX,WAAW,EAAE;UAAA,OAAMC,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;QAAA,CAAC;QACrC,SAAS,EAAEN,SAAU;QACrB,OAAO,EAAEE,OAAQ;QACjB,OAAO,EAAEE,OAAQ;QACjB,QAAQ,EAAEN,EAAG;QACb,IAAI,EAAE;MAAK;IAGlB;EACM,EACI;AAEvB,CAAC;AAED,eAAeH,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}