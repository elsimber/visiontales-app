{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport MainText from \"./components/MainText\";\nimport * as SQLite from \"expo-sqlite\";\nimport NavButton from \"./components/NavButton\";\nimport MainTextInput from \"./components/MainTextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar db = SQLite.openDatabase(\"VisionTalesDB.db\");\nvar EditVideo = function EditVideo(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var video_id = route.params.video_id;\n  var _useState = useState(route.params.title),\n    _useState2 = _slicedToArray(_useState, 2),\n    videoTitle = _useState2[0],\n    setVideoTitle = _useState2[1];\n  var _useState3 = useState(route.params.topic),\n    _useState4 = _slicedToArray(_useState3, 2),\n    videoTopic = _useState4[0],\n    setVideoTopic = _useState4[1];\n  var _useState5 = useState(route.params.url),\n    _useState6 = _slicedToArray(_useState5, 2),\n    videoURL = _useState6[0],\n    setVideoURL = _useState6[1];\n  var _useState7 = useState(route.params.yt_id),\n    _useState8 = _slicedToArray(_useState7, 2),\n    videoYtId = _useState8[0],\n    setVideoYtId = _useState8[1];\n  var editVideo = function editVideo() {\n    if (!videoTitle) {\n      alert(\"Please fill video title\");\n      return;\n    }\n    if (!videoTopic) {\n      alert(\"Please fill video topic\");\n      return;\n    }\n    db.transaction(function (tx) {\n      console.log(\"|.\" + video_id);\n      tx.executeSql(\"UPDATE table_video set title=?, topic=? , url=?, yt_id=? where video_id=?\", [videoTitle, videoTopic, videoURL, videoYtId, video_id], function (tx, results) {\n        console.log(\"2\");\n        console.log(\"Results\", results.rowsAffected);\n        if (results.rowsAffected > 0) {\n          fetch('https://2jwoowlka2.execute-api.us-east-1.amazonaws.com/videos', {\n            method: 'PUT',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              video_id: videoYtId,\n              title: videoTitle,\n              topic: videoTopic,\n              yt_url: videoURL\n            })\n          });\n          Alert.alert(\"Success\", \"User updated successfully\", [{\n            text: \"Ok\",\n            onPress: function onPress() {\n              return navigation.navigate(\"HomeScreen\");\n            }\n          }], {\n            cancelable: false\n          });\n        } else alert(\"Updation Failed\");\n      });\n    });\n  };\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(View, {\n      style: {\n        flex: 1,\n        backgroundColor: \"white\"\n      },\n      children: [_jsx(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsx(ScrollView, {\n          keyboardShouldPersistTaps: \"handled\",\n          children: _jsxs(KeyboardAvoidingView, {\n            behavior: \"padding\",\n            style: {\n              flex: 1,\n              justifyContent: \"space-between\"\n            },\n            children: [_jsx(MainText, {\n              text: \"Video with YouTube ID:\"\n            }), _jsx(MainText, {\n              text: videoYtId\n            }), _jsx(MainTextInput, {\n              placeholder: \"Enter Video Title\",\n              value: videoTitle,\n              style: {\n                padding: 10\n              },\n              onChangeText: function onChangeText(videoTitle) {\n                return setVideoTitle(videoTitle);\n              }\n            }), _jsx(MainTextInput, {\n              placeholder: \"Enter Video Topic\",\n              value: videoTopic,\n              style: {\n                padding: 10\n              },\n              onChangeText: function onChangeText(videoTopic) {\n                return setVideoTopic(videoTopic);\n              }\n            }), _jsx(NavButton, {\n              title: \"Update video\",\n              customClick: editVideo\n            })]\n          })\n        })\n      }), _jsx(Text, {\n        style: {\n          fontSize: 18,\n          textAlign: \"center\",\n          color: \"grey\"\n        }\n      }), _jsx(Text, {\n        style: {\n          fontSize: 16,\n          textAlign: \"center\",\n          color: \"grey\"\n        },\n        children: \"https://www.cherisheyesight.org/\"\n      })]\n    })\n  });\n};\nexport default EditVideo;","map":{"version":3,"names":["useState","useEffect","React","MainText","SQLite","NavButton","MainTextInput","db","openDatabase","EditVideo","navigation","route","video_id","params","title","videoTitle","setVideoTitle","topic","videoTopic","setVideoTopic","url","videoURL","setVideoURL","yt_id","videoYtId","setVideoYtId","editVideo","alert","transaction","tx","console","log","executeSql","results","rowsAffected","fetch","method","headers","Accept","body","JSON","stringify","yt_url","Alert","text","onPress","navigate","cancelable","flex","backgroundColor","justifyContent","padding","fontSize","textAlign","color"],"sources":["/Users/shravun/Desktop/Dev/visiontales-app/iSight-MobileApp-main-2/VisionTalesAdmin/pages/EditVideo.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport React from \"react\";\n// FlatList, SafeAreaView, StatusBar, , Text,\nimport {\n  FlatList,\n  Text,\n  ScrollView,\n  KeyboardAvoidingView,\n  Alert,\n  View,\n  SafeAreaView,\n  StyleSheet,\n  StatusBar,\n  TouchableOpacity,\n} from \"react-native\";\nimport MainText from \"./components/MainText\";\nimport * as SQLite from \"expo-sqlite\";\nimport NavButton from \"./components/NavButton\";\nimport MainTextInput from \"./components/MainTextInput\";\n\nvar db = SQLite.openDatabase(\"VisionTalesDB.db\");\n\nconst EditVideo = ({ navigation, route }) => {\n  const video_id = route.params.video_id;\n  // const title = route.params.title;\n  // const topic = route.params.topic;\n  // const url = route.params.url;\n  // const yt_id = route.params.yt_id;\n  // let [video_id, setVideoId] = useState(route.params.video_id);\n  let [videoTitle, setVideoTitle] = useState(route.params.title);\n  let [videoTopic, setVideoTopic] = useState(route.params.topic);\n  let [videoURL, setVideoURL] = useState(route.params.url);\n  let [videoYtId, setVideoYtId] = useState(route.params.yt_id);\n\n  // let updateAllStates = (videoTitle, videoTopic, videoURL, videoYtId) => {\n  //   setVideoTitle(videoTitle);\n  //   setVideoTopic(videoTopic);\n  //   setVideoURL(videoURL);\n  //   setVideoYtId(videoYtId);\n  //   // setVideoId(video_id);\n  // };\n\n  // useEffect(() => {\n  //   console.log(\"checkkkkk\");\n\n  //   updateAllStates(videoTitle, videoTopic, videoURL, videoYtId);\n  // }, []);\n\n  \n  let editVideo = () => {\n    // console.log(videoTitle, videoTopic, videoURL, videoYtId, video_id);\n\n    if (!videoTitle) {\n      alert(\"Please fill video title\");\n      return;\n    }\n    if (!videoTopic) {\n      alert(\"Please fill video topic\");\n      return;\n    }\n\n    db.transaction((tx) => {\n      console.log(\"|.\" + video_id);\n\n      \n\n      // Execute local change\n      tx.executeSql(\n        \"UPDATE table_video set title=?, topic=? , url=?, yt_id=? where video_id=?\",\n        [videoTitle, videoTopic, videoURL, videoYtId, video_id],\n        (tx, results) => {\n          console.log(\"2\");\n          console.log(\"Results\", results.rowsAffected);\n          if (results.rowsAffected > 0) {\n            //Push change to AWS database\n            fetch('https://2jwoowlka2.execute-api.us-east-1.amazonaws.com/videos', {\n              method: 'PUT',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                video_id: videoYtId,\n                title: videoTitle,\n                topic: videoTopic,\n                yt_url: videoURL\n              })\n            });\n            \n            Alert.alert(\n              \"Success\",\n              \"User updated successfully\",\n              [\n                {\n                  text: \"Ok\",\n                  onPress: () => navigation.navigate(\"HomeScreen\"),\n                },\n              ],\n              { cancelable: false }\n            );\n          } else alert(\"Updation Failed\");\n        }\n      );\n    });\n  };\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <View style={{ flex: 1, backgroundColor: \"white\" }}>\n        <View style={{ flex: 1 }}>\n          <ScrollView keyboardShouldPersistTaps=\"handled\">\n            <KeyboardAvoidingView\n              behavior=\"padding\"\n              style={{ flex: 1, justifyContent: \"space-between\" }}\n            >\n\t      <MainText text=\"Video with YouTube ID:\" />\n\t      <MainText text={videoYtId} />\n              <MainTextInput\n                placeholder=\"Enter Video Title\"\n                value={videoTitle}\n                style={{ padding: 10 }}\n                onChangeText={(videoTitle) => setVideoTitle(videoTitle)}\n              />\n              <MainTextInput\n                placeholder=\"Enter Video Topic\"\n                value={videoTopic}\n                style={{ padding: 10 }}\n                onChangeText={(videoTopic) => setVideoTopic(videoTopic)}\n              />\n              <NavButton title=\"Update video\" customClick={editVideo} />\n            </KeyboardAvoidingView>\n          </ScrollView>\n        </View>\n        <Text\n          style={{\n            fontSize: 18,\n            textAlign: \"center\",\n            color: \"grey\",\n          }}\n        ></Text>\n        <Text\n          style={{\n            fontSize: 16,\n            textAlign: \"center\",\n            color: \"grey\",\n          }}\n        >\n          https://www.cherisheyesight.org/\n        </Text>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default EditVideo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}