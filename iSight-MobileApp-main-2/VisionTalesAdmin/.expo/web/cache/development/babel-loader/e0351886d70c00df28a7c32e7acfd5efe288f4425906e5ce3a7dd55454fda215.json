{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport CheckBox from 'expo-checkbox';\nimport NavButton from \"./components/NavButton\";\nimport MainTextInput from \"./components/MainTextInput\";\nimport { openDatabase } from 'react-native-sqlite-storage';\nimport * as SQLite from 'expo-sqlite';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar db = SQLite.openDatabase('VisionTalesDB.db');\nvar AddVideo = function AddVideo(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    videoTitle = _useState2[0],\n    setVideoTitle = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    videoTopic = _useState4[0],\n    setVideoTopic = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    videoURL = _useState6[0],\n    setVideoURL = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    textValue = _useState8[0],\n    setTextValue = _useState8[1];\n  var _useState9 = useState(1),\n    _useState10 = _slicedToArray(_useState9, 2),\n    numInputs = _useState10[0],\n    setNumInputs = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isCorrect = _useState12[0],\n    setIsCorrect = _useState12[1];\n  var refInputs = useRef([]);\n  var refAnswers = useRef([]);\n  var refCorrect = useRef([]);\n  var questions = [];\n  var setInputValue = function setInputValue(index, value) {\n    var inputs = refInputs.current;\n    inputs[index] = value;\n    setTextValue(value);\n  };\n  var addInput = function addInput() {\n    refInputs.current.push('');\n    refAnswers.current.push(['', '']);\n    refCorrect.current.push([false, false]);\n    setNumInputs(refInputs.current.length);\n  };\n  var removeInput = function removeInput() {\n    refInputs.current.splice(refInputs.current.length - 1, 1)[0];\n    refAnswers.current.splice(refAnswers.current.length - 1, 1)[0];\n    refCorrect.current.splice(refCorrect.current.length - 1, 1)[0];\n    setNumInputs(refInputs.current.length);\n  };\n  var populateQuestions = function populateQuestions() {\n    var _loop = function _loop(i) {\n      var answers = [];\n      var _loop2 = function _loop2(j) {\n        answers.push(_jsxs(View, {\n          children: [_jsxs(Text, {\n            children: [\"Answer \", j + 1, \".\"]\n          }), _jsx(MainTextInput, {\n            placeholder: \"Enter Answer\",\n            onChangeText: function onChangeText(value) {\n              refAnswers.current[i][j] = value;\n              setTextValue(value);\n            },\n            value: refAnswers.current[i][j],\n            style: {\n              padding: 10\n            }\n          }), _jsxs(View, {\n            style: {\n              flex: 1,\n              flexDirection: 'row'\n            },\n            children: [_jsx(CheckBox, {\n              value: refCorrect.current[i][j],\n              onValueChange: function onValueChange(value) {\n                refCorrect.current[i][j] = value;\n                setIsCorrect(!isCorrect);\n              },\n              style: {\n                margin: 10\n              }\n            }), _jsx(Text, {\n              style: {\n                marginTop: 10\n              },\n              children: \"Correct Answer\"\n            })]\n          })]\n        }, j));\n      };\n      for (var j = 0; j < refAnswers.current[i].length; j++) {\n        _loop2(j);\n      }\n      questions.push(_jsxs(View, {\n        style: {\n          borderTopColor: 'black',\n          borderTopWidth: 1,\n          paddingTop: 15,\n          marginTop: 15\n        },\n        children: [_jsxs(Text, {\n          children: [\"Question \", i + 1, \".\"]\n        }), _jsx(MainTextInput, {\n          placeholder: \"Enter Question\",\n          onChangeText: function onChangeText(value) {\n            return setInputValue(i, value);\n          },\n          value: refInputs.current[i],\n          style: {\n            padding: 10\n          }\n        }), answers, refAnswers.current[i].length < 4 ? _jsx(NavButton, {\n          title: \"Add an Answer\",\n          customClick: function customClick() {\n            refAnswers.current[i].push('');\n            refCorrect.current[i].push(false);\n            setNumInputs(refAnswers.current[i].length);\n          },\n          style: {\n            marginBottom: 10\n          }\n        }) : null, refAnswers.current[i].length > 2 ? _jsx(NavButton, {\n          title: \"Remove Answer\",\n          customClick: function customClick() {\n            refAnswers.current[i].splice(refAnswers.current[i].length - 1, 1)[0];\n            refCorrect.current[i].splice(refCorrect.current[i].length - 1, 1)[0];\n            setNumInputs(refAnswers.current[i].length);\n          }\n        }) : null]\n      }, i));\n    };\n    for (var i = 0; i < refInputs.current.length; i++) {\n      _loop(i);\n    }\n  };\n  var add_video = function add_video() {\n    if (!videoTitle) {\n      alert('Error: Please fill video title');\n      return;\n    }\n    if (!videoTopic) {\n      alert('Error: Please fill video topic');\n      return;\n    }\n    if (!videoURL) {\n      alert('Error: Please fill video URL');\n      return;\n    }\n    if (videoURL.length < 11) {\n      alert('Error: Valid YouTube URL/IDs are at least 11 digits');\n      return;\n    }\n    for (var i = 0; i < refInputs.current.length; i++) {\n      if (!refInputs.current[i]) {\n        alert(\"Please fill Question \" + (i + 1));\n        return;\n      }\n      for (var j = 0; j < refAnswers.current[i].length; j++) {\n        if (!refAnswers.current[i][j]) {\n          alert(\"Please fill Answer \" + (j + 1) + \" of Question \" + (i + 1));\n          return;\n        }\n        if (!refCorrect.current[i].includes(true)) {\n          alert(\"At least 1 answer of Question \" + (i + 1) + \" should be correct\");\n          return;\n        }\n      }\n    }\n    fetch('https://2jwoowlka2.execute-api.us-east-1.amazonaws.com/videos', {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        video_id: videoURL.substring(videoURL.length - 11, videoURL.length),\n        quiz: {\n          questions: refInputs.current,\n          choices: refAnswers.current,\n          correct: refCorrect.current\n        },\n        title: videoTitle,\n        topic: videoTopic\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      db.transaction(function (txn) {\n        console.log('1');\n        txn.executeSql('INSERT INTO table_video (title, topic, url, yt_id) VALUES (?,?,?,?)', [videoTitle, videoTopic, videoURL, videoURL.substring(videoURL.length - 11, videoURL.length)], function (txn, results) {\n          console.log('Results', results.rowsAffected);\n          if (results.rowsAffected > 0) {\n            Alert.alert('Success', 'You Have Uploaded Successfully!', [{\n              text: 'Ok',\n              onPress: function onPress() {\n                return navigation.navigate('HomeScreen');\n              }\n            }], {\n              cancelable: false\n            });\n          } else {\n            console.log('3');\n            alert('Local Upload Failed');\n          }\n        });\n      });\n    }).catch(function (error) {\n      console.log(error);\n      Alert.alert('Upload Failed');\n    });\n  };\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(View, {\n      style: {\n        flex: 1,\n        backgroundColor: 'white'\n      },\n      children: _jsx(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsx(ScrollView, {\n          keyboardShouldPersistTaps: \"handled\",\n          children: _jsxs(KeyboardAvoidingView, {\n            behavior: \"padding\",\n            style: {\n              flex: 1,\n              justifyContent: 'space-between'\n            },\n            children: [_jsx(MainTextInput, {\n              placeholder: \"Enter Title\",\n              onChangeText: function onChangeText(videoTitle) {\n                return setVideoTitle(videoTitle);\n              },\n              style: {\n                padding: 10\n              }\n            }), _jsx(MainTextInput, {\n              placeholder: \"Enter Topic\",\n              onChangeText: function onChangeText(videoTopic) {\n                return setVideoTopic(videoTopic);\n              },\n              style: {\n                padding: 10\n              }\n            }), _jsx(MainTextInput, {\n              placeholder: \"Enter URL\",\n              onChangeText: function onChangeText(videoURL) {\n                return setVideoURL(videoURL);\n              },\n              style: {\n                padding: 10\n              }\n            }), populateQuestions(), questions.map(function (question) {\n              return question;\n            }), refInputs.current.length < 5 ? _jsx(NavButton, {\n              title: \"Add a Question\",\n              customClick: addInput\n            }) : null, refInputs.current.length > 0 ? _jsx(NavButton, {\n              title: \"Remove Question\",\n              customClick: removeInput\n            }) : null, _jsx(NavButton, {\n              title: \"Submit\",\n              customClick: add_video\n            })]\n          })\n        })\n      })\n    })\n  });\n};\nexport default AddVideo;","map":{"version":3,"names":["React","useState","useRef","useEffect","CheckBox","NavButton","MainTextInput","openDatabase","SQLite","db","AddVideo","navigation","videoTitle","setVideoTitle","videoTopic","setVideoTopic","videoURL","setVideoURL","textValue","setTextValue","numInputs","setNumInputs","isCorrect","setIsCorrect","refInputs","refAnswers","refCorrect","questions","setInputValue","index","value","inputs","current","addInput","push","length","removeInput","splice","populateQuestions","i","answers","j","padding","flex","flexDirection","margin","marginTop","borderTopColor","borderTopWidth","paddingTop","marginBottom","add_video","alert","includes","fetch","method","headers","Accept","body","JSON","stringify","video_id","substring","quiz","choices","correct","title","topic","then","response","json","data","transaction","txn","console","log","executeSql","results","rowsAffected","Alert","text","onPress","navigate","cancelable","catch","error","backgroundColor","justifyContent","map","question"],"sources":["/Users/shravun/Desktop/Dev/visiontales-app/iSight-MobileApp-main-2/VisionTalesAdmin/pages/AddVideo.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport {\n  View,\n  ScrollView,\n  KeyboardAvoidingView,\n  Alert,\n  SafeAreaView,\n  Text,\n} from 'react-native';\nimport CheckBox from 'expo-checkbox';\nimport NavButton from './components/NavButton';\nimport MainTextInput from './components/MainTextInput';\nimport { openDatabase } from 'react-native-sqlite-storage';\nimport * as SQLite from 'expo-sqlite';\n\nvar db = SQLite.openDatabase('VisionTalesDB.db');\n\nconst AddVideo = ({ navigation }) => {\n  let [videoTitle, setVideoTitle] = useState('');\n  let [videoTopic, setVideoTopic] = useState('');\n  let [videoURL, setVideoURL] = useState('');\n  let [textValue, setTextValue] = useState('');\n  let [numInputs, setNumInputs] = useState(1);\n  let [isCorrect, setIsCorrect] = useState(false);\n  let refInputs = useRef([]);\n  let refAnswers = useRef([]);\n  let refCorrect = useRef([]);\n  let questions = [];\n\n  let setInputValue = (index: number, value: string) => {\n    const inputs = refInputs.current;\n    inputs[index] = value;\n    setTextValue(value);\n  }\n\n  let addInput = () => {\n    refInputs.current.push('');\n    refAnswers.current.push(['', '']);\n    refCorrect.current.push([false, false]);\n    setNumInputs(refInputs.current.length);\n  }\n\n  let removeInput = () => {\n    refInputs.current.splice(refInputs.current.length - 1, 1)[0];\n    refAnswers.current.splice(refAnswers.current.length - 1, 1)[0];\n    refCorrect.current.splice(refCorrect.current.length - 1, 1)[0];\n    setNumInputs(refInputs.current.length);\n  }\n\n  let populateQuestions = () => {\n    for (let i = 0; i < refInputs.current.length; i++) {\n      let answers = [];\n      for (let j = 0; j < refAnswers.current[i].length; j++) {\n        answers.push(\n          <View key={j}>\n            <Text>Answer {j + 1}.</Text>\n            <MainTextInput\n              placeholder=\"Enter Answer\"\n              onChangeText={\n                value => {\n                  refAnswers.current[i][j] = value;\n                  setTextValue(value);\n                }\n              }\n              value={refAnswers.current[i][j]}\n              style={{ padding: 10 }}\n            />\n            <View style={{ flex: 1, flexDirection: 'row' }}>\n              <CheckBox\n                value={refCorrect.current[i][j]}\n                onValueChange={\n                  value => {\n                    refCorrect.current[i][j] = value;\n                    setIsCorrect(!isCorrect);\n                  }\n                }\n                style={{ margin: 10 }}\n              />\n              <Text style={{ marginTop: 10 }}>Correct Answer</Text>\n            </View>\n          </View>\n        )\n      }\n\n      questions.push(\n        <View key={i}\n          style={{\n            borderTopColor: 'black',\n            borderTopWidth: 1,\n            paddingTop: 15,\n            marginTop: 15,\n          }}>\n          <Text>Question {i + 1}.</Text>\n          <MainTextInput\n            placeholder=\"Enter Question\"\n            onChangeText={\n              value => setInputValue(i, value)\n            }\n            value={refInputs.current[i]}\n            style={{ padding: 10 }}\n          />\n          {answers}\n          {refAnswers.current[i].length < 4 ?\n            <NavButton\n              title=\"Add an Answer\"\n              customClick={\n                () => {\n                  refAnswers.current[i].push('');\n                  refCorrect.current[i].push(false);\n                  setNumInputs(refAnswers.current[i].length);\n                }\n              }\n              style={{ marginBottom: 10 }}\n            />\n            : null\n          }\n          {refAnswers.current[i].length > 2 ?\n            <NavButton\n              title=\"Remove Answer\"\n              customClick={\n                () => {\n                  refAnswers.current[i].splice(refAnswers.current[i].length - 1, 1)[0];\n                  refCorrect.current[i].splice(refCorrect.current[i].length - 1, 1)[0];\n                  setNumInputs(refAnswers.current[i].length);\n                }} />\n            : null\n          }\n        </View>\n      );\n    }\n  }\n\n  let add_video = () => {\n    if (!videoTitle) {\n      alert('Error: Please fill video title');\n      return;\n    }\n    if (!videoTopic) {\n      alert('Error: Please fill video topic');\n      return;\n    }\n    if (!videoURL) {\n      alert('Error: Please fill video URL');\n      return;\n    }\n    if (videoURL.length < 11) {\n      alert('Error: Valid YouTube URL/IDs are at least 11 digits');\n      return;\n    }\n\n    for (let i = 0; i < refInputs.current.length; i++) {\n      if (!refInputs.current[i]) {\n        alert(`Please fill Question ${i + 1}`);\n        return;\n      }\n\n      for (let j = 0; j < refAnswers.current[i].length; j++) {\n        if (!refAnswers.current[i][j]) {\n          alert(`Please fill Answer ${j + 1} of Question ${i + 1}`);\n          return;\n        }\n        if (!refCorrect.current[i].includes(true)) {\n          alert(`At least 1 answer of Question ${i + 1} should be correct`);\n          return;\n        }\n      }\n    }\n\n    fetch('https://2jwoowlka2.execute-api.us-east-1.amazonaws.com/videos', {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        video_id: videoURL.substring(videoURL.length - 11, videoURL.length),\n        quiz: {\n          questions: refInputs.current,\n          choices: refAnswers.current,\n          correct: refCorrect.current,\n        },\n        title: videoTitle,\n        topic: videoTopic,\n      })\n    })\n      .then(response => response.json())\n      .then((data) => {\n        db.transaction(function (txn) {\n          console.log('1');\n          txn.executeSql(\n            'INSERT INTO table_video (title, topic, url, yt_id) VALUES (?,?,?,?)',\n            [videoTitle, videoTopic, videoURL, videoURL.substring(videoURL.length - 11, videoURL.length)],\n            (txn, results) => {\n              console.log('Results', results.rowsAffected);\n              if (results.rowsAffected > 0) {\n                Alert.alert(\n                  'Success',\n                  'You Have Uploaded Successfully!',\n                  [\n                    {\n                      text: 'Ok',\n                      onPress: () => navigation.navigate('HomeScreen'),\n                    },\n                  ],\n                  { cancelable: false }\n                );\n              } else {\n                console.log('3');\n                alert('Local Upload Failed');\n              }\n            }\n          );\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        Alert.alert('Upload Failed');\n      });\n  }\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <View style={{ flex: 1, backgroundColor: 'white' }}>\n        <View style={{ flex: 1 }}>\n          <ScrollView keyboardShouldPersistTaps=\"handled\">\n            <KeyboardAvoidingView\n              behavior=\"padding\"\n              style={{ flex: 1, justifyContent: 'space-between' }}>\n              <MainTextInput\n                placeholder=\"Enter Title\"\n                onChangeText={\n                  (videoTitle) => setVideoTitle(videoTitle)\n                }\n                style={{ padding: 10 }}\n              />\n              <MainTextInput\n                placeholder=\"Enter Topic\"\n                onChangeText={\n                  (videoTopic) => setVideoTopic(videoTopic)\n                }\n                style={{ padding: 10 }}\n              />\n              <MainTextInput\n                placeholder=\"Enter URL\"\n                onChangeText={\n                  (videoURL) => setVideoURL(videoURL)\n                }\n                style={{ padding: 10 }}\n              />\n\n              {populateQuestions()}\n              {questions.map(question => question)}\n              {refInputs.current.length < 5 ?\n                <NavButton\n                  title=\"Add a Question\"\n                  customClick={addInput} />\n                : null\n              }\n              {refInputs.current.length > 0 ?\n                <NavButton\n                  title=\"Remove Question\"\n                  customClick={removeInput} />\n                : null\n              }\n\n              <NavButton title=\"Submit\" customClick={add_video} />\n            </KeyboardAvoidingView>\n          </ScrollView>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default AddVideo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}