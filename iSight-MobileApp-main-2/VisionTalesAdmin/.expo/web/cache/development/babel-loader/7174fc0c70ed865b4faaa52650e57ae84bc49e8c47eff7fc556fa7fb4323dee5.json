{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport CheckBox from \"expo-checkbox\";\nimport NavButton from \"./components/NavButton\";\nimport MainText from \"./components/MainText\";\nimport MainTextInput from \"./components/MainTextInput\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar EditQuiz = function EditQuiz(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState(route.params.title),\n    _useState2 = _slicedToArray(_useState, 2),\n    quizTitle = _useState2[0],\n    setQuizTitle = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    textValue = _useState4[0],\n    setTextValue = _useState4[1];\n  var _useState5 = useState(1),\n    _useState6 = _slicedToArray(_useState5, 2),\n    numInputs = _useState6[0],\n    setNumInputs = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isCorrect = _useState8[0],\n    setIsCorrect = _useState8[1];\n  var refInputs = useRef(route.params.questions);\n  var refAnswers = useRef(route.params.choices);\n  var refCorrect = useRef(route.params.correct);\n  var questions = [];\n  var setInputValue = function setInputValue(index, value) {\n    var inputs = refInputs.current;\n    inputs[index] = value;\n    setTextValue(value);\n  };\n  var addInput = function addInput() {\n    refInputs.current.push(\"\");\n    refAnswers.current.push([\"\", \"\"]);\n    refCorrect.current.push([false, false]);\n    setNumInputs(refInputs.current.length);\n  };\n  var removeInput = function removeInput() {\n    refInputs.current.splice(refInputs.current.length - 1, 1)[0];\n    refAnswers.current.splice(refAnswers.current.length - 1, 1)[0];\n    refCorrect.current.splice(refCorrect.current.length - 1, 1)[0];\n    setNumInputs(refInputs.current.length);\n  };\n  var populateQuestions = function populateQuestions() {\n    var _loop = function _loop(i) {\n      var answers = [];\n      var _loop2 = function _loop2(j) {\n        answers.push(_jsxs(View, {\n          children: [_jsxs(Text, {\n            children: [\"Answer \", j + 1, \".\"]\n          }), _jsx(MainTextInput, {\n            placeholder: \"Enter Answer\",\n            onChangeText: function onChangeText(value) {\n              refAnswers.current[i][j] = value;\n              setTextValue(value);\n            },\n            value: refAnswers.current[i][j],\n            style: {\n              padding: 10\n            }\n          }), _jsxs(View, {\n            style: {\n              flex: 1,\n              flexDirection: 'row'\n            },\n            children: [_jsx(CheckBox, {\n              value: refCorrect.current[i][j],\n              onValueChange: function onValueChange(value) {\n                refCorrect.current[i][j] = value;\n                setIsCorrect(!isCorrect);\n              },\n              style: {\n                margin: 10\n              }\n            }), _jsx(Text, {\n              style: {\n                marginTop: 10\n              },\n              children: \"Correct Answer\"\n            })]\n          })]\n        }, j));\n      };\n      for (var j = 0; j < refAnswers.current[i].length; j++) {\n        _loop2(j);\n      }\n      questions.push(_jsxs(View, {\n        style: {\n          borderTopColor: \"black\",\n          borderTopWidth: 1,\n          paddingTop: 15,\n          marginTop: 15\n        },\n        children: [_jsxs(Text, {\n          children: [\"Question \", i + 1, \".\"]\n        }), _jsx(MainTextInput, {\n          placeholder: \"Enter Question\",\n          onChangeText: function onChangeText(value) {\n            return setInputValue(i, value);\n          },\n          value: refInputs.current[i],\n          style: {\n            padding: 10\n          }\n        }), answers, refAnswers.current[i].length < 4 ? _jsx(NavButton, {\n          title: \"Add an Answer\",\n          customClick: function customClick() {\n            refAnswers.current[i].push(\"\");\n            refCorrect.current[i].push(false);\n            setNumInputs(refAnswers.current[i].length);\n          }\n        }) : null, refAnswers.current[i].length > 2 ? _jsx(NavButton, {\n          title: \"Remove Answer\",\n          customClick: function customClick() {\n            refAnswers.current[i].splice(refAnswers.current[i].length - 1, 1)[0];\n            refCorrect.current[i].splice(refCorrect.current[i].length - 1, 1)[0];\n            setNumInputs(refAnswers.current[i].length);\n          }\n        }) : null]\n      }, i));\n    };\n    for (var i = 0; i < refInputs.current.length; i++) {\n      _loop(i);\n    }\n  };\n  var add_quiz = function add_quiz() {\n    for (var i = 0; i < refInputs.current.length; i++) {\n      if (!refInputs.current[i]) {\n        alert(\"Please fill Question \" + (i + 1));\n        return;\n      }\n      for (var j = 0; j < refAnswers.current[i].length; j++) {\n        if (!refAnswers.current[i][j]) {\n          alert(\"Please fill Answer \" + (j + 1) + \" of Question \" + (i + 1));\n          return;\n        }\n        if (!refCorrect.current[i].includes(true)) {\n          alert(\"At least 1 answer of Question \" + (i + 1) + \" should be correct\");\n          return;\n        }\n      }\n    }\n    fetch(\"https://2jwoowlka2.execute-api.us-east-1.amazonaws.com/quizzes\", {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title: quizTitle,\n        questions: refInputs.current,\n        choices: refAnswers.current,\n        correct: refCorrect.current\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      Alert.alert(\"Success\", \"You Have Updated Successfully!\", [{\n        text: \"Ok\",\n        onPress: function onPress() {\n          return navigation.navigate(\"HomeScreen\");\n        }\n      }], {\n        cancelable: false\n      });\n    }).catch(function (error) {\n      console.log(error);\n      Alert.alert(\"Update Failed\");\n    });\n  };\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(View, {\n      style: {\n        flex: 1,\n        backgroundColor: \"white\"\n      },\n      children: _jsx(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsx(ScrollView, {\n          keyboardShouldPersistTaps: \"handled\",\n          children: _jsxs(KeyboardAvoidingView, {\n            behavior: \"padding\",\n            style: {\n              flex: 1,\n              justifyContent: \"space-between\"\n            },\n            children: [_jsx(MainText, {\n              text: quizTitle\n            }), populateQuestions(), questions.map(function (question) {\n              return question;\n            }), refInputs.current.length < 5 ? _jsx(NavButton, {\n              title: \"Add a Question\",\n              customClick: addInput\n            }) : null, refInputs.current.length > 1 ? _jsx(NavButton, {\n              title: \"Remove Question\",\n              customClick: removeInput\n            }) : null, _jsx(NavButton, {\n              title: \"Submit\",\n              customClick: add_quiz\n            })]\n          })\n        })\n      })\n    })\n  });\n};\nexport default EditQuiz;","map":{"version":3,"names":["React","useState","useRef","useEffect","CheckBox","NavButton","MainText","MainTextInput","EditQuiz","navigation","route","params","title","quizTitle","setQuizTitle","textValue","setTextValue","numInputs","setNumInputs","isCorrect","setIsCorrect","refInputs","questions","refAnswers","choices","refCorrect","correct","setInputValue","index","value","inputs","current","addInput","push","length","removeInput","splice","populateQuestions","i","answers","j","padding","flex","flexDirection","margin","marginTop","borderTopColor","borderTopWidth","paddingTop","add_quiz","alert","includes","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","data","Alert","text","onPress","navigate","cancelable","catch","error","console","log","backgroundColor","justifyContent","map","question"],"sources":["/Users/shravun/Desktop/Dev/visiontales-app/iSight-MobileApp-main-2/VisionTalesAdmin/pages/EditQuiz.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  View,\n  ScrollView,\n  KeyboardAvoidingView,\n  Alert,\n  SafeAreaView,\n  Text,\n} from \"react-native\";\nimport CheckBox from \"expo-checkbox\";\nimport NavButton from \"./components/NavButton\";\nimport MainText from \"./components/MainText\";\nimport MainTextInput from \"./components/MainTextInput\";\n\nconst EditQuiz = ({ navigation, route }) => {\n  let [quizTitle, setQuizTitle] = useState(route.params.title);\n  let [textValue, setTextValue] = useState(\"\");\n  let [numInputs, setNumInputs] = useState(1);\n  let [isCorrect, setIsCorrect] = useState(false);\n  let refInputs = useRef(route.params.questions);\n  let refAnswers = useRef(route.params.choices);\n  let refCorrect = useRef(route.params.correct);\n  let questions = [];\n\n  let setInputValue = (index: number, value: string) => {\n    const inputs = refInputs.current;\n    inputs[index] = value;\n    setTextValue(value);\n  };\n\n  let addInput = () => {\n    refInputs.current.push(\"\");\n    refAnswers.current.push([\"\", \"\"]);\n    refCorrect.current.push([false, false]);\n    setNumInputs(refInputs.current.length);\n  };\n\n  let removeInput = () => {\n    refInputs.current.splice(refInputs.current.length - 1, 1)[0];\n    refAnswers.current.splice(refAnswers.current.length - 1, 1)[0];\n    refCorrect.current.splice(refCorrect.current.length - 1, 1)[0];\n    setNumInputs(refInputs.current.length);\n  };\n\n  let populateQuestions = () => {\n    for (let i = 0; i < refInputs.current.length; i++) {\n      let answers = [];\n      for (let j = 0; j < refAnswers.current[i].length; j++) {\n        answers.push(\n          <View key={j}>\n            <Text>Answer {j + 1}.</Text>\n            <MainTextInput\n              placeholder=\"Enter Answer\"\n              onChangeText={(value) => {\n                refAnswers.current[i][j] = value;\n                setTextValue(value);\n              }}\n              value={refAnswers.current[i][j]}\n              style={{ padding: 10 }}\n            />\n            <View style={{ flex: 1, flexDirection: 'row' }}>\n            <CheckBox\n              value={refCorrect.current[i][j]}\n              onValueChange={(value) => {\n                refCorrect.current[i][j] = value;\n                setIsCorrect(!isCorrect);\n              }}\n              style={{ margin: 10}}\n            />\n            <Text style={{ marginTop: 10 }}>Correct Answer</Text>\n            </View>\n          </View>\n        );\n      }\n\n      questions.push(\n        <View\n          key={i}\n          style={{\n            borderTopColor: \"black\",\n            borderTopWidth: 1,\n            paddingTop: 15,\n            marginTop: 15,\n          }}\n        >\n          <Text>Question {i + 1}.</Text>\n          <MainTextInput\n            placeholder=\"Enter Question\"\n            onChangeText={(value) => setInputValue(i, value)}\n            value={refInputs.current[i]}\n            style={{ padding: 10 }}\n          />\n          {answers}\n          {refAnswers.current[i].length < 4 ? (\n            <NavButton\n              title=\"Add an Answer\"\n              customClick={() => {\n                refAnswers.current[i].push(\"\");\n                refCorrect.current[i].push(false);\n                setNumInputs(refAnswers.current[i].length);\n              }}\n            />\n          ) : null}\n          {refAnswers.current[i].length > 2 ? (\n            <NavButton\n              title=\"Remove Answer\"\n              customClick={() => {\n                refAnswers.current[i].splice(\n                  refAnswers.current[i].length - 1,\n                  1\n                )[0];\n                refCorrect.current[i].splice(\n                  refCorrect.current[i].length - 1,\n                  1\n                )[0];\n                setNumInputs(refAnswers.current[i].length);\n              }}\n            />\n          ) : null}\n        </View>\n      );\n    }\n  };\n\n  let add_quiz = () => {\n    for (let i = 0; i < refInputs.current.length; i++) {\n      if (!refInputs.current[i]) {\n        alert(`Please fill Question ${i + 1}`);\n        return;\n      }\n\n      for (let j = 0; j < refAnswers.current[i].length; j++) {\n        if (!refAnswers.current[i][j]) {\n          alert(`Please fill Answer ${j + 1} of Question ${i + 1}`);\n          return;\n        }\n        if (!refCorrect.current[i].includes(true)) {\n          alert(`At least 1 answer of Question ${i + 1} should be correct`);\n          return;\n        }\n      }\n    }\n\n    fetch(\"https://2jwoowlka2.execute-api.us-east-1.amazonaws.com/quizzes\", {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        title: quizTitle,\n        questions: refInputs.current,\n        choices: refAnswers.current,\n        correct: refCorrect.current,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        Alert.alert(\n          \"Success\",\n          \"You Have Updated Successfully!\",\n          [\n            {\n              text: \"Ok\",\n              onPress: () => navigation.navigate(\"HomeScreen\"),\n            },\n          ],\n          { cancelable: false }\n        );\n      })\n      .catch((error) => {\n        console.log(error);\n        Alert.alert(\"Update Failed\");\n      });\n  };\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <View style={{ flex: 1, backgroundColor: \"white\" }}>\n        <View style={{ flex: 1 }}>\n          <ScrollView keyboardShouldPersistTaps=\"handled\">\n            <KeyboardAvoidingView\n              behavior=\"padding\"\n              style={{ flex: 1, justifyContent: \"space-between\" }}\n            >\n\t      <MainText text={quizTitle} />\n              {populateQuestions()}\n              {questions.map((question) => question)}\n              {refInputs.current.length < 5 ? (\n                <NavButton title=\"Add a Question\" customClick={addInput} />\n              ) : null}\n              {refInputs.current.length > 1 ? (\n                <NavButton title=\"Remove Question\" customClick={removeInput} />\n              ) : null}\n\n              <NavButton title=\"Submit\" customClick={add_quiz} />\n            </KeyboardAvoidingView>\n          </ScrollView>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default EditQuiz;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}